- name: Add github runner user
  ansible.builtin.user:
    name: github-runner
    home: /github-runner

- name: Download runner software
  ansible.builtin.unarchive:
    src: https://github.com/actions/runner/releases/download/v2.322.0/actions-runner-linux-x64-2.322.0.tar.gz
    dest: /github-runner
    owner: github-runner
    group: github-runner
    remote_src: yes

- name: Install libicu
  ansible.builtin.dnf:
    name: libicu
    state: installed

- name: Configure runner
  ansible.builtin.shell: ./config.sh --url https://github.com/raghudevopsb82 --token {{ token }} --runnergroup Default --name github-runner-az --labels self-hosted --work _work --replace
  args:
    chdir: /github-runner
  become_user: github-runner
  vars:
    token: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=infra/github-actions:RUNNER_TOKEN token={{ vault_token }} url=http://10.1.0.8:8200') }}"
  ignore_errors: yes

- name: Copy Service
  ansible.builtin.template:
    src: github-runner.service
    dest: /etc/systemd/system/github-runner.service

- name: Download Terraform Repo
  ansible.builtin.get_url:
    url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
    dest: /etc/yum.repos.d/hashicorp.repo

- name: Install Terraform
  ansible.builtin.dnf:
    name: terraform
    state: installed

- name: Copy kubernetes repo file
  ansible.builtin.template:
    src: kube.repo
    dest: /etc/yum.repos.d/kube.repo

- name: Install kubectl
  ansible.builtin.dnf:
    name: kubectl
    state: installed

- name: Install argocd cli
  ansible.builtin.shell: |
    VERSION=$(curl -L -s https://raw.githubusercontent.com/argoproj/argo-cd/stable/VERSION)
    curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v$VERSION/argocd-linux-amd64
    install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
    rm argocd-linux-amd64

- name: Setup Nodejs module
  ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:20 -y

- name: Install App Software Language packs
  ansible.builtin.dnf:
    name:
      - maven
      - nodejs
      - python3
      - gcc
      - python3-devel

- name: Download sonar scanner
  ansible.builtin.unarchive:
    src: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip
    dest: /opt
    remote_src: yes

- name: Copy docker repo
  ansible.builtin.template:
    src: docker.repo
    dest: /etc/yum.repos.d/docker.repo

- name: Install docker
  ansible.builtin.dnf:
    name: docker-ce
    state: installed

- name: Add user to docker group.
  ansible.builtin.user:
    name: github-runner
    groups: docker

- name: Start Docker Service
  ansible.builtin.systemd_service:
    name: docker
    state: restarted
    enabled: yes

- name: ACR Login
  ansible.builtin.shell: az acr login --name roboshopb82

- name: Start Service
  ansible.builtin.systemd_service:
    name: github-runner
    state: restarted
    enabled: yes
    daemon-reload: yes






